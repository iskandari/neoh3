version: '3.4'

services:
  neo4j:
    image: neo4j:4.4.4
    container_name: neo4j
    hostname: neo4j
    environment:
      # auth
      NEO4J_AUTH: ${NEO_AUTH}            # e.g. neo4j/password
      # listen on all interfaces inside the container
      NEO4J_dbms_default__listen__address: 0.0.0.0
      # Bolt listen/advertised
      NEO4J_dbms_connector_bolt_listen__address: ":7687"
      NEO4J_dbms_connector_bolt_advertised__address: "neo4j:7687"   # service DNS for other containers
      # HTTP listen/advertised
      NEO4J_dbms_connector_http_listen__address: ":7474"
      NEO4J_dbms_connector_http_advertised__address: "neo4j:7474"
      # (optional) Labs plugins: e.g. ["apoc","graph-data-science"]
      NEO4JLABS_PLUGINS: ${NEO_PLUGINS}
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./neo4j_docker_volume:/var/lib/neo4j/data
      - ./import:/var/lib/neo4j/import         # <â€” put CSVs here for LOAD CSV (optional but recommended)
    healthcheck:
      test: [ "CMD", "/var/lib/neo4j/bin/cypher-shell", "-u", "${NEO_USER}", "-p", "${NEO_PASSWORD}", "RETURN 0" ]
      interval: 10s
      timeout: 10s
      retries: 20

  neo4jsetup:
    build: ./project
    restart: "no"
    depends_on:
      neo4j:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # critical: connect via Bolt to the service name
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: ${NEO_USER}
      NEO4J_PASS: ${NEO_PASSWORD}
    volumes:
      - ./project:/usr/src/app
      - ./import:/var/lib/neo4j/import         # if your script needs to drop CSVs for LOAD CSV

  api:
    build: ./project
    container_name: h3-api
    command: "uvicorn app:app --host 0.0.0.0 --port 8000"
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: ${NEO_USER}
      NEO4J_PASS: ${NEO_PASSWORD}
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12